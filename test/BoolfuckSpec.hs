module BoolfuckSpec where
  
import Boolfuck 
import Test.Hspec
import Data.Char (ord)

spec :: Spec
spec = do
  describe "interpret Boolfuck" $ do
    it "Empty tests" $ do
      boolfuck "" "" `shouldBe` ""

    it "Single command tests" $ do
      boolfuck "<" "" `shouldBe` ""
      boolfuck ">" "" `shouldBe` ""
      boolfuck "+" "" `shouldBe` ""
      boolfuck "." "" `shouldBe` ""
      boolfuck ";" "" `shouldBe` "\x0000"

    it "Hello World test" $ do
      boolfuck ";;;+;+;;+;+;+;+;+;+;;+;;+;;;+;;+;+;;+;;;+;;+;+;;+;+;;;;+;+;;+;;;+;;+;+;+;;;;;;;+;+;;+;;;+;+;;;+;+;;;;+;+;;+;;+;+;;+;;;+;;;+;;+;+;;+;;;+;+;;+;;+;+;+;;;;+;+;;;+;+;+;" "" `shouldBe` "Hello, world!\n"

    it "Basic tests" $ do
      boolfuck ">,>,>,>,>,>,>,>,<<<<<<<[>]+<[+<]>>>>>>>>>[+]+<<<<<<<<+[>+]<[<]>>>>>>>>>[+<<<<<<<<[>]+<[+<]>>>>>>>>>+<<<<<<<<+[>+]<[<]>>>>>>>>>[+]<<<<<<<<;>;>;>;>;>;>;>;<<<<<<<,>,>,>,>,>,>,>,<<<<<<<[>]+<[+<]>>>>>>>>>[+]+<<<<<<<<+[>+]<[<]>>>>>>>>>]<[+<]" "Codewars\x00ff" `shouldBe` "Codewars"
      boolfuck ">,>,>,>,>,>,>,>,>+<<<<<<<<+[>+]<[<]>>>>>>>>>[+<<<<<<<<[>]+<[+<]>;>;>;>;>;>;>;>;>+<<<<<<<<+[>+]<[<]>>>>>>>>>[+<<<<<<<<[>]+<[+<]>>>>>>>>>+<<<<<<<<+[>+]<[<]>>>>>>>>>[+]+<<<<<<<<+[>+]<[<]>>>>>>>>>]<[+<]>,>,>,>,>,>,>,>,>+<<<<<<<<+[>+]<[<]>>>>>>>>>]<[+<]" "Codewars" `shouldBe` "Codewars"
      boolfuckx0008\x0009" `shouldBe` "\x0048"
